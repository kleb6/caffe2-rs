hello! could you please help me write a crate-description for the rust crate "caffe2-plan" containing the following symbols? not all of the symbols are defined in this crate, but they are used somehow (please do not explicitly list the symbols, or write anything other than a simple description.  no description header is necessary. however, please be descriptive without making too many assumptions):

?
A
Adding
An
Arc
Atomic
AtomicBool
Blob
BlobGetMutableTensor
Box
CHECK
CPU
Cancel
Check
CompiledExecutionStep
CompiledGuard
Condvar
Controls
CreateLocalBlob
CreateNet
Default
Deref
DerefMut
Drop
ERROR
EXCEPTION
Error
Essentially
Exception
ExceptionTracer
ExceptionWrapper
ExceptionWrapperTerminate
ExecuteStepRecursive
Executing
Execution
ExecutionStep
ExecutionStepWrapper
FLAGS
Fail
Failed
False
FirstException
GLOBAL
Get
GetBlob
GetExceptionString
GetNet
HasBlob
HashMap
ID
INFO
IO
If
In
Initializing
InjectWorkspaceId
Injects
Instead
Integer
Into
IsType
LOG
Must
NODE
NetBase
NetDef
NetDefInfo
NetDefMap
Network
Nothing
Number
One
PTR
Plan
PlanDef
Processing
Python
RawMutex
Reporter
ReporterInstance
Resize
Returns
Run
Running
SHOULD
SIGABRT
STOP
ScalarType
ScopeExitGuard
Seconds
Self
ShouldContinue
So
Started
Starting
Step
String
Substep
THROW
Target
TensorCPU
This
Thread
Timer
Total
True
Undefined
VLOG
WARNING
WORKSPACE
We
Will
Workspace
WorkspaceIdInjector
Your
\
\n
`CompileGuard`
`true`
about
across
after
afterwards
alive
all
along
already
always
an
and
another
are
atomic
attempts
avoids
b
back
be
because
before
being
best
blob
boolean
both
but
c
caffe
calculating
call
calls
can
cancel
cancellation
careful
case
cast
catch
cause
causes
cfg
check
child
children
chrono
cloning
compilation
compile
compiled
compiledRef
compiledStep
compiledSubstep
complex
concurrent
condition
const
contains
continuation
continue
control
correct
correctly
count
create
createAndGetNet
created
creating
creation
current
cv
deadlock
debugger
def
default
define
deref
destroyed
destructed
did
directly
distributed
do
doCompile
does
doesn
done
drop
due
dyn
dynamic
eagerly
effort
either
emplace
end
endif
error
every
ew
ex
exactly
exception
exceptionMsg
exceptions
execute
executed
executing
execution
executions
executor
exist
existing
exit
expects
export
external
externalShouldContinue
externalWorkspace
fact
fail
failed
fails
failure
false
find
first
flag
found
function
getContinuationTest
getShouldStop
getting
given
global
got
gotFailure
grab
gracefully
guard
handle
happen
has
hasException
have
hold
holds
id
ident
identifier
ifdef
implement
in
initialized
initializing
inject
injector
instance
instances
interval
intervalMillis
into
iter
iterating
iteration
iterations
its
join
joinable
just
keep
leading
legal
length
let
level
lifetime
lk
ll
load
local
localWorkspace
lock
lot
machines
macro
made
main
mainStep
make
mark
may
means
message
meta
might
millis
milliseconds
model
move
ms
msg
must
mutex
name
named
need
needOverride
needs
needsOverride
net
netAlreadyExists
netDef
netDefs
netShouldContinue
nets
network
networks
new
next
no
node
non
not
nothing
notify
nullptr
numThreads
object
once
one
only
onlyOnce
op
ops
or
order
original
other
otherwise
out
overflow
override
owns
parallelism
parking
plan
plan?
plans
pointer
pointers
possible
present
preserves
process
program
programming
protects
provided
ptr
purposes
push
recurring
recurringSubsteps
recursive
ref
relevant
report
reportNet
reportSubsteps
reportWorker
reporter
reset
rethrow
rethrowException
returned
returns
right
rules
running
runs
runtime
s
same
scalar
second
seconds
see
seq
sequential
set
setting
setup
shared
should
shouldContinue
shouldStop
signal
size
so
specified
specify
ss
start
static
step
stepWrapper
steps
still
stop
stopped
store
str
stuck
substep
substepShouldContinue
substepWrapper
substeps
successfully
support
supported
sync
synchronization
tensor
terminates
terminating
test
that
them
then
this
thread
threads
throw
tied
time
timeout
timer
took
top
trigger
try
type
u
undefined
uninitialized
unique
unsafe
until
use
used
uses
variable
void
wait
way
we
what
which
while
will
with
worker
workers
workersDone
workflow
workspace
workspaces
wrapper
ws
you
your

ASSERT
Atomic
AtomicBool
AtomicI
Blob
BlobGetMutableTensor
BlockingError
BlockingErrorOp
BlockingErrorPlan
CPU
CreateBlob
DEATH
DOC
Drop
EXPECT
EmptyPlan
Error
ErrorAsyncPlan
ErrorOp
ErrorPlanWithCancellableStuckNet
Exception
FAIL
First
GlobalInit
HandleExecutorThreadExceptionsGuard
INFO
LOG
Noop
NoopOp
Operator
OperatorDef
OperatorStorage
Option
ParseFromString
PlanDef
PlanExecutorTest
R
ReporterErrorPlanWithCancellableStuckNet
Resize
RunPlan
Self
Set
SetFinished
ShouldStopWithCancel
Sized
String
StuckAsync
StuckAsyncOp
StuckBlocking
StuckBlockingOp
THROW
TRUE
TSAN
Tensor
TestError
TextFormat
The
Wait
Workspace
add
after
all
an
and
arg
argc
args
argv
async
back
blob
block
blocking
blockingErrorRuns
build
c
caffe
call
callback
cancel
cancelCount
cancellable
cancelled
cast
cause
cfg
char
chrono
concurrent
const
context
count
cpu
death
def
defined
device
doesn
don
drop
end
endif
error
errors
every
exception
exceptions
execution
executions
executor
explicitly
failed
false
feature
fetch
first
gets
global
globalInit
guard
handle
has
have
hours
init
instances
iter
lazy
let
looping
milliseconds
mobile
ms
n
name
net
nets
network
never
new
nicely
not
notifies
notify
one
op
operator
or
outputs
parallel
parallelErrorPlan
parallelErrorPlanWithCancellableStuckNet
part
plan
play
point
ptrs
push
ran
reached
ref
register
reporter
reporterErrorPlanWithCancellableStuckNet
returns
runs
sanitizer
scheduling
set
shape
should
shouldStopWithCancelPlan
shouldn
size
sleep
so
start
static
step
stop
storage
str
stuck
stuckRun
sub
substep
substeps
supported
tensor
test
tests
that
then
this
thread
threads
throw
throwing
throws
timeout
trait
type
unwrap
use
ve
we
what
while
with
workers
ws
xplat
