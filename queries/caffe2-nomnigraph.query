hello! 

I am writing a rust crate called caffe2-nomnigraph. 

It is part of workspace containing the rust
translation of the caffe2 operator library.

I would like you to help me write a rust crate
description for it.

Please write the description in the following format:

<short description tag used in the crate header>
<double newline>
<longer, in depth description and mathematical analysis>
<END>

Please indicate that the crate is in the
process of being translated from C++ to
Rust. It is possible some of the function
bodies are in the process of translation.

Below are listed some tokens from this crate. 

Please describe the mathematical ideas
identified by this information alongside the
relevant mathematical equations in unicode.

thanks!

please format your response in the Markdown file format.

here are the tokens:
Criteria
DataFlowTestGraph
DataFlowTestGraphCriteria
NodeType
TestGraph
TestGraph_NodeRef
TestMatchGraph
TestMatchPredicate
any
default
get_in_node
is_subgraph_match
lazy_static
non_terminal
reset
subgraph_matcher_dag_matching
subgraph_matcher_dag_matching_multi_edges
subgraph_matcher_is_node_match
subgraph_matcher_is_subtree_match
subgraph_matcher_is_subtree_match_realistic
subgraph_matcher_is_subtree_match_repeated
subgraph_matcher_replace_graph_realistic
test_graph_node_printer
test_match_predicate
tree
NNEquality
TestClass
TestRandom
bb_printer
cfg_edge_printer
create_graph
create_graph_with_cycle
create_test_node
equal
next_int
nn_printer
test_node_printer
to_string
Edge
EdgeRef
EmptyEdgeData
NodeRef
NomGraph
NomNode
Subgraph
SubgraphType
add_edge
add_in_edge
add_node
add_out_edge
create_edge
create_node
create_node_internal
create_node_with_data
default
delete_edge
delete_node
delete_nodes
get_edge
get_edge_if_exists
get_edges
get_edges_count
get_in_edges
get_mutable_edges
get_mutable_nodes
get_nodes
get_nodes_count
get_out_edges
has_edge
has_edge_between_given_nodes
has_node
head
is
is_valid
move_edge
move_node
move_subgraph
print_edges
print_nodes
remove_edge
remove_edge_internal
remove_in_edge
remove_node
remove_out_edge
replace_in_edges
replace_node
replace_out_edges
set_head
set_in_edges
set_out_edges
set_tail
should
swap_nodes
tail
match_basic
BasicBlock
BasicBlockRef
BasicBlockType
ControlFlowGraph
ControlFlowGraphImpl
EdgeRef
Graph
NodeRef
Program
SubgraphType
bbType
create_anonymous_function
create_named_function
delete_instruction
delete_node
drop
get_instructions
get_mutable_instructions
has_instruction
insert_instruction_before
move_instruction_before
of
push_instruction_node
track_node
untrack_node
EdgeRef
MatchGraph
MatchNodeMap
MatchPredicate
NodeRef
Predicate
ReplaceGraphOperation
SubgraphMatchResult
SubgraphMatchResultType
SubgraphType
count
debug_string
exclude_from_subgraph
get_count
get_criteria
get_debug_message
get_debug_string
get_match_node_map
get_matched_subgraph
is_match
is_node_match
is_non_terminal
is_subgraph_match
is_subgraph_match_internal
matched
non_terminal
not_matched
not_matched_with_debug_msg
replace_subgraph
set_debug_string
should_include_in_subgraph
star_count
Annotation
AnnotationKind
DataType
GenericOperator
Layout
NNCFGraph
NNDataKind
NNGraph
NNKind
NNLayout
NNMatchGraph
NNMatchPredicate
NNModule
NNPhi
NNSubgraph
NeuralNetData
NeuralNetOperator
NodeHelper
NomTensor
While
cast
classof
clone
coalesce_inserted_data_dependencies
convert_node
create_operator
create_unique_data_node
data_iterator
default
delete_subgraph
filter
from
get
get_annotation
get_consumers
get_kind
get_layout
get_mutable_annotation
get_name
get_producer
get_type
has_consumer
has_producer
has_unique_consumer
impl_
inheritedFrom
insert_op
is
match_external_tensor_node
node_iterator
replace_all_uses_with
replace_as_consumer
replace_producer
replace_subgraph
replace_subgraph_with_operator
set_annotation
set_layout
set_name
set_type
specifier
Branch
Data
Instruction
Opcode
Phi
Return
Terminator
Value
ValueKind
classof
default
get_kind
get_opcode
get_version
is_terminator
set_version
coalesce_inserted_data_dependencies
coalesce_inserted_data_dependencies_helper
get_consumers
get_name
get_producer
get_tracked_nodes
has_consumer
has_producer
has_unique_consumer
match_external_tensor_node
replace_all_uses_with
replace_as_consumer
replace_producer
tarjans_cycle
tarjans_dag
tarjans_random
tarjans_simple
tarjans_with_edge_storage
NodeRefT
TopoSort
TopoSortResult
TopoSortResultStatus
dfs
run
topo_sort
neural_net_graph_replace_graph
create_subgraph
dominance_frontier_map
dominator_tree
immediate_dominator_map
induce_edges
reachable
Add
AveragePool
AveragePoolRelu
BatchNormalization
ChannelShuffle
Clip
Concat
Conv
ConvRelu
ConvTranspose
CopyFromOpenCL
CopyToOpenCL
Declare
Export
FC
Flatten
GivenTensorFill
MaxPool
MaxPoolRelu
NCHW2NHWC
NHWC2NCHW
Receive
Relu
Reshape
Send_
Softmax
Sum
SumRelu
default
from
get_add_axis
get_axis
get_axisW
get_broadcast
get_destination
get_dilations
get_epsilon
get_group
get_is_test
get_kernel_shape
get_max
get_min
get_momentum
get_pads
get_source
get_spatial
get_strides
set_add_axis
set_axis
set_axisW
set_broadcast
set_destination
set_dilations
set_epsilon
set_group
set_is_test
set_kernel_shape
set_max
set_min
set_momentum
set_pads
set_source
set_spatial
set_strides
GraphT
TopoSortT
topo_sort_cycle1
topo_sort_cycle2
topo_sort_dag
topo_sort_simple
dominator_tree_test1
dominator_tree_test2
subgraph_induce_edges
subgraph_induce_edges_cycle
binary_match_all_match
binary_match_basic
binary_match_empty_graph
binary_match_no_match
binary_match_removed_middle_node
EqualityClassDefault
Match
NodeEqualityDefault
equal
match_
recursive_match
DotGenerator
EdgePrinter
NodePrinter
convert_graph_to_dot_string
convert_graph_to_dot_string_and_annotate_subgraph_clusters
convert_struct
convert_subgraph_to_dot
convert_subgraph_to_dot_string
convert_to_dot_record_string
convert_with_optional_subgraphs_cluster
default_edge_printer
generate_node
get_operator_dot_string
get_operator_subtree_dot_string
Notifier
NotifierCallback
StorageType
T
data
delete_callback
delete_destructor_callback
delete_notification_callback
drop
is
mutable_data
notify
register_destructor_callback
register_notification_callback
reset_data
EdgeRef
EdgeWrapper
GraphWrapper
NodeRef
NodeWrapper
SubgraphType
Tarjans
WrappedGraph
WrappedSubgraph
connect
for
run
tarjans
unwrap_subgraph
binary_match
of
TestGraph
basic_create_node_and_edge
basic_delete_edge
basic_delete_node
basic_dot_generator
basic_has_node
basic_move_subgraph
basic_moves
basic_replace_edges
