hello! could you please help me write a crate-description for the rust crate "caffe2-math" containing the following symbols? not all of the symbols are defined in this crate, but they are used somehow (please do not explicitly list the symbols, or write anything other than a simple description.  no description header is necessary. however, please be descriptive without making too many assumptions):

Add
BLASFunc
BothEnds
BothEndsMoments
C
Colwise
ColwiseMoments
ColwiseReduceSum
ConstEigenArrayMap
ConstEigenMatrixMap
ConstEigenVectorArrayMap
EXPORT
Each
EigenFunc
EigenVectorArrayMap
EigenVectorMap
Func
GetIndexFromDims
Impl
In
IncreaseIndexInDims
IsBothEndsReduce
IsColwiseReduce
IsRowwiseReduce
K
M
MAX
MIN
MathFunc
Max
Min
Moments
MomentsImpl
ReduceL
ReduceMax
ReduceMean
ReduceMin
ReduceSum
ReduceTensorImpl
Reducer
Rowwise
RowwiseMoments
Scale
Set
TODO
Tensor
The
Xi
Y
abs
accumulate
all
alpha
and
arr
axes
b
be
blas
both
branch
c
caffe
cast
cblas
cfg
col
cols
colwise
const
context
corresponding
dasum
delegate
dimension
dimensions
dims
dnrm
eigen
elements
eliminate
ends
equal
export
false
function
functions
global
have
ident
index
indicate
init
integers
j
k
kInit
kIsNorm
limits
lowest
lpNorm
m
macro
match
max
maxCoeff
mean
memcpy
memset
mid
min
minCoeff
moments
multiplies
multiply
must
n
ndim
ndims
norm
not
nxt
or
over
plus
pre
ptr
reduce
reduceL
reduced
reducer
rows
rowwise
rules
sasum
scale
scratch
should
size
sizeof
snrm
specialized
sqrt
square
static
sum
tensor
transpose
tt
ty
typename
use
utils
var
variance
vec
void
with
y

?
A
ASSERT
Accumulate
Bool
Box
Broadcast
BroadcastFloatTest
BroadcastTest
CHECK
CPU
CblasNoTrans
CblasTrans
Combine
CopyFromCPU
DeviceOption
EXPECT
FLOAT
FloatToHalfConversion
Gemm
GemmBatched
GemmBatchedFloatTest
GemmBatchedTest
GemmBatchedTrans
GemmNoTransNoTrans
GemmNoTransTrans
GemmStridedBatched
GemmStridedBatchedFloatTest
Gemv
GemvNoTrans
GemvTrans
GetParam
Half
Hello
MathTest
Perform
RandFixedSum
RandFixedSumTest
ReinitializeTensor
RunBroadcastTest
RunGemmBatched
RunGemmStridedBatched
Self
Set
Tensor
Test
TestContext
TestWithParam
UpperBound
VerifyOutput
W
Y
alpha
any
assert
b
back
batched
beta
broadcast
c
case
cast
cbegin
cend
const
context
converted
copy
cpu
ctx
device
dims
eq
gemm
inserter
instantiate
irange
kEps
kOne
kPointFive
kZero
make
math
option
output
public
set
setup
size
static
stride
strided
teardown
test
testing
trans
tuple
unique
up
value
verify
w
wish
works
world
y
you

A
ARGS
AVX
Abs
Acos
Add
And
Asin
Atan
Axpby
Axpy
B
BLAS
BLASFunc
BitwiseAnd
BitwiseOr
BitwiseXor
C
CBLAS
CPU
Caffe
Cbrt
CdfNorm
Common
ConstEigenVectorArrayMap
Cos
Cosh
Cube
Depending
Different
Div
ERRMODE
EXPORT
Eigen
EigenFunc
EigenOp
EigenVectorArrayMap
EigenVectorMap
Erf
Exp
FTZDAZ
For
Func
GE
GPU
GT
HA
IGNORE
If
Inv
LE
LT
Log
MKL
MKLFunc
Max
Min
Mul
NE
Neg
OFF
Or
Powx
Rsqrt
S
Scale
Set
Sign
Sin
SinCos
Sinh
Sqr
Sqrt
StdFunc
Sub
TAlpha
TData
Tan
Tanh
VA
VML
Xor
Y
above
abs
acos
add
all
alpha
also
alternatives
an
and
architecture
are
arg
arr
as
asin
assume
atan
axpby
axpy
b
batch
be
being
beta
binary
bit
bitwise
blas
c
caffe
call
cast
cblas
cbrt
cdf
cfg
char
compare
const
constexpr
context
cos
cosh
covered
cube
custom
daxpby
delegate
deliver
device
div
do
dscal
eQ
eigen
either
equivalent
erf
example
exp
export
expr
external
fast
faster
flags
from
fucked
function
functions
gE
gT
have
here
ident
implement
implementation
in
inv
inverse
invocations
kRsqrt
lE
lT
library
lives
log
logical
macro
math
max
memset
min
mkl
mul
n
nE
neg
norm
not
note
offset
operator
or
passed
pointer
pow
powx
probably
ptr
related
remainder
right
rsqrt
rules
s
saxpby
saxpy
scale
set
setConstant
setting
should
sign
simple
simply
sin
sincos
sinh
sizeof
so
specialized
specified
sqr
sqrt
square
sscal
static
sub
such
switches
tan
tanh
than
that
them
these
throughput
transform
tt
ty
u
unary
up
use
used
using
usually
vdAbs
vdAcos
vdAdd
vdAsin
vdAtan
vdCbrt
vdCdfNorm
vdCos
vdCosh
vdDiv
vdErf
vdInv
vdInvSqrt
vdLn
vdLog
vdMul
vdPowx
vdSin
vdSinCos
vdSinh
vdSqr
vdSqrt
vdSub
vdTan
via
vmdExp
vmsExp
void
vsAbs
vsAcos
vsAdd
vsAsin
vsAtan
vsCbrt
vsCdfNorm
vsCos
vsCosh
vsDiv
vsErf
vsInv
vsInvSqrt
vsLn
vsLog
vsMul
vsPowx
vsSin
vsSinCos
vsSinh
vsSqr
vsSqrt
vsSub
vsTan
we
whether
will
with
xor
y
you
your

?
A
ARM
Add
AddStripedBatch
Also
And
As
Atlas
Avoid
B
BINARY
BLAS
BROADCAST
Baseline
BinaryOperator
BitwiseAnd
BitwiseOr
BitwiseXor
Broadcast
BroadcastBinaryOpImpl
BroadcastImpl
C
CBLAS
CPU
Caffe
Cannot
CblasNoTrans
CblasRowMajor
CblasTrans
Col
ColNdNCHWImpl
ColZeroPaddingAndNoDilationNCHW
ColZeroPaddingAndNoDilationNHWC
Colwise
ColwiseBinaryOp
ColwiseDiv
ColwiseMax
ColwiseSub
Common
ComputeBroadcastBinaryOpDims
ConstEigenArrayMap
ConstEigenMatrixMap
ConstEigenOuterStridedMatrixMap
ConstEigenStridedMatrixMap
ConstEigenVectorArrayMap
ConstEigenVectorMap
ContextT
CopyMatrix
CopyVector
D
DCHECK
DELEGATE
DataType
Depending
Description
Div
DivMod
Dot
EIGEN
Each
Eigen
EigenArrayMap
EigenMatrixMap
EigenOuterStride
EigenOuterStridedArrayMap
EigenOuterStridedMatrixMap
EigenStride
EigenStridedArrayMap
EigenStridedMatrixMap
EigenVectorArrayMap
EigenVectorMap
Exp
F
FATAL
FIXME
FUNCTION
Fallback
Fast
FixedDivisor
For
From
Func
G
GE
GEMMs
GT
Gemm
Gemv
Generate
GetIndexFromDims
H
IMPLEMENTED
Ideally
If
Im
ImZeroPaddingAndNoDilationNCHW
ImZeroPaddingAndNoDilationNHWC
Implements
In
IncreaseIndexInDims
Ind
IndexT
InvStd
Inverse
IsAGeZeroAndALtB
IsBothEndsBroadcastBinaryOp
IsColwiseBroadcastBinaryOp
IsRowwiseBroadcastBinaryOp
It
K
LE
LOG
LT
Log
Loop
M
MKL
Manually
Maximum
Mul
NCHW
ND
NE
NEON
NOT
NaNs
Non
Notably
Note
Notice
O
Op
Or
Prologue
R
RandFixedSum
RandGenerator
RandSyntheticData
RandUniform
RandUniformUnique
Rowwise
RowwiseBinaryOp
RowwiseDiv
RowwiseMax
RowwiseSub
S
ST
Sampling
Scale
Set
Should
Since
Sub
Sum
TData
THNN
TIn
TOut
TRANSPOSE
Tensor
TensorProto
The
This
To
Torch
TransA
TransB
Transform
Type
TypeMetaCopy
U
Unexpected
VML
Val
ValueT
Vectorizable
W
WARNING
We
Xor
Y
\n
`
`abort
above
access
accesses
accumulate
actual
add
additional
adjust
adjustment
advantage
affect
against
algorithm
aligned
alignment
all
allows
alpha
already
alternatives
an
and
app
append
approach
approximation
are
argument
as
avoid
axes
axis
b
back
backend
backends
batch
batched
be
because
before
begin
being
beta
bias
binary
bit
bitwise
blas
body
bottom
bound
broadcast
but
c
cache
caffe
call
calls
can
case
cast
cbegin
cblas
cdf
cend
cfg
channel
channels
char
check
choice
choose
chooses
chwf
clamping
clip
coalesce
col
cols
column
colwise
colwisemax
common
compare
computation
compute
const
constexpr
contain
context
contextNCHW
contextNHWC
contiguous
continue
copy
copyvector
correct
corresponding
count
cout
cpu
create
cross
cum
cumulative
current
currently
custom
d
dNCHWImpl
dNHWCImpl
datatype
debug
default
define
defined
delegate
depending
described
different
dilation
dilationNCHW
dilationNHWC
dimension
dims
dis
distance
distances
distributed
distribution
div
divides
dkernel
do
doesn
domatcopy
done
dot
double
dst
earlier
efficiently
eigen
either
element
end
endif
endl
ensures
epilogue
epsilon
equal
equivalent
erase
every
ex
existing
expects
explicitly
export
expr
external
false
few
fi
file
fill
find
first
fixed
flags
floats
floor
following
forward
found
frame
frames
from
function
functions
gaps
gaussian
gemm
gemv
generate
generated
generating
give
given
greater
groups
h
handle
has
have
header
height
here
hints
hw
id
ident
idx
ifdef
ih
im
image
img
implement
implementation
implementations
implements
in
increases
increment
incrementIfNotMax
increments
index
indices
initialization
inner
input
insert
instantiation
interface
into
inv
inverse
involve
itemsize
iter
iterate
iw
iy
j
k
kBroadcast
kCol
kFloatsPerLoop
kUnroll
kVecSizeInFloat
kernel
kh
know
kt
kw
latter
layout
lazy
ld
ld?
lda
ldb
ldc
left
len
less
library
lies
limitation
line
link
list
logical
look
lookup
loop
lru
m
macro
major
manually
map
mat
math
matrices
matrix
max
maxCoeff
maximum
may
mean
mem
memcpy
memory
memset
method
mid
min
minus
mistakes
mkl
monotonically
most
multiplier
multiplies
multiply
n
nchwimpl
nd
ndim
need
needed
never
new
next
nhwcimpl
nip
no
noalias
non
normal
not
notice
nullptr
number
numbers
numerical
nxt
offset
often
one
only
op
openblas
operation
option
or
order
out
outer
output
over
overflows
pad
padding
party
patch
path
per
plane
platform
platforms
plus
pop
port
pre
prefix
present
previous
printf
prints
probability
prologue
provided
provides
ptr
pulled
push
quickly
r
rand
random
range
reach
real
ref
reference
references
refs
related
remainder
remaining
remeding
represent
request
requirement
respectively
rest
result
reverse
right
round
route
row
rows
rowwise
rowwisemax
rsqrt
rules
s
sample
satisfy
save
scalars
scale
scaled
scaling
scanf
scratch
sd
searching
see
select
separately
set
setZero
setting
setzero
sgemm
sgemv
shape
short
should
simpler
simply
single
size
sizeof
so
somatcopy
spatial
specialized
specified
speed
sqr
squaredNorm
src
st
stack
static
stdev
stride
strided
stripe
striped
sub
such
sum
support
supported
supports
swap
switch
symptom
syn
synthetic
sys
sz
table
tables
takes
temp
test
th
than
that
them
there
these
third
this
top
towards
trace
trans
transform
transformations
transpose
trivial
tt
ty
type
u
uint
uintptr
underlying
unexpected
unfolded
uni
uniform
uniformly
unique
unordered
unrolled
until
unused
up
upper
us
use
used
uses
usize
utilize
utils
v
vBias
vaddq
val
value
values
var
variable
vdupq
vec
vectorizable
vectorize
via
vld
void
vst
w
we
whether
which
while
width
will
with
within
would
xor
y
yh
you
yw
zero

Half
HalfAddFunctor
HalfDivFunctor
HalfMulFunctor
HalfSubFunctor
To
b
convert
invoke

A
Add
Adds
An
And
Applies
B
BitwiseAnd
BitwiseOr
BitwiseXor
Broadcasts
C
CBLAS
CHW
CblasNoTrans
CblasTrans
Col
Colwise
Comp
Compute
D
DataType
Decaf
DefaultEngine
Div
Dot
Elemwise
Engine
For
Func
G
GE
GPU
GT
GemmBatched
Gemv
Generate
H
Im
In
LE
LT
M
Mul
NCHW
NE
NHW
NHWC
Or
RS
Rowwise
Select
StorageOrder
Stripe
Sub
Sum
TODO
TRANSPOSE
Tensor
TensorProto
Trans
TransA
TypeMetaCopy
W
We
Xor
Y
above
abstraction
accesses
add
alpha
also
always
among
an
and
any
as
avoid
b
batch
batched
be
because
beta
bias
biasCHW
binary
broadcast
c
cases
cblas
channel
channels
class
col
cols
column
colwise
compare
const
contains
context
contiguous
copy
d
declare
define
depending
difference
dilation
dim
dimension
dimensional
dims
distances
distribution
does
doesn
doing
dot
elements
elementwise
empty
engine
epsilon
ex
explicit
export
false
first
fixed
from
function
functions
gaussian
gemm
gemv
generated
gives
group
groups
h
has
height
ident
idx
im
image
img
in
index
inner
input
interface
into
inv
item
k
kBroadcast
kOrder
kernel
layout
lda
ldb
ldc
length
library
limitation
m
macro
make
math
matrix
max
maximum
mean
memory
most
moving
multiplier
must
n
nd
ndim
no
number
op
order
outer
output
pad
patch
per
placeholder
probably
provide
provides
ptr
r
rand
re
restriction
result
routines
row
rows
rowwise
rules
same
scalar
scratch
select
selected
selection
set
shape
simple
simpler
single
size
slowest
specific
specified
sqr
squares
st
stack
stride
strided
stripe
striped
sub
subject
sum
synthetic
sys
takes
tensors
that
this
though
trans
type
typename
uniform
unique
unknown
up
use
usize
value
values
var
variance
void
w
want
we
whether
width
will
wise
with
within
write
writes
y
you

?
ASSERT
AddStripedBatch
Blob
BlobGetMutableTensor
Bool
Box
Broadcast
BroadcastGPUFloatTest
BroadcastGPUTest
CPU
CUDA
CUDAContext
CblasNoTrans
CblasTrans
Combine
Copy
CopyFrom
CopyFromCPU
CopyVector
CreateBlob
DeviceOption
EXPECT
FLOAT
FinishDeviceComputation
GemmBatched
GemmBatchedGPUFloatTest
GemmBatchedGPUTest
GemmBatchedGPUTrans
GemmStridedBatched
GemmStridedBatchedGPUFloatTest
GetParam
HasCudaGPU
Have
MathUtilGPUTest
PROTO
ReduceMax
ReduceMin
Resize
RunBroadcastTest
RunGemmBatched
RunGemmStridedBatched
Self
Set
SetUpData
Tensor
TestContext
TestWithParam
VerifyOutput
VerifyResult
W
Workspace
Y
alpha
aux
batched
beta
binary
blob
blobx
bloby
broadcast
can
case
const
context
correct
cpu
cuda
default
device
different
dims
dst
execute
executeGpuBinaryOpTest
expected
gemm
gpu
host
input
inspect
instantiate
j
k
kEps
line
make
math
n
nullptr
op
operation
option
output
public
result
set
setup
shapex
shapey
size
so
src
stride
strided
stripe
tensorx
tensory
test
testAddStripedBatch
testCopyVector
testReduceMax
testReduceMin
testing
tot
trans
tuple
type
unique
unnamed
up
value
values
verify
w
we
ws
y

A
Accumulate
Blob
BlobGetMutableTensor
CHECK
CPU
CblasNoTrans
CblasTrans
CopyFrom
CreateBlob
DeviceOption
EXPECT
FinishDeviceComputation
Gemm
GemmNoTransNoTrans
GemmNoTransTrans
Gemv
GemvNoTrans
GemvTrans
HIP
HIPContext
HasHipGPU
MathROCBLASTest
PROTO
Resize
Set
Test
W
Workspace
Y
blobA
blobW
blobX
blobY
const
context
device
host
kOne
kPointFive
kZero
math
option
set
shapeA
shapeW
shapeX
shapeY
size
tensorA
tensorW
tensorX
tensorY
test
type
ws

C
ComputeTransposedStrides
ConstEigenMatrixMap
Convert
D
ESTIMATE
EXPORT
EigenMatrixMap
H
HxW
IncreaseIndexInDims
IsBatchTranspose
IsIdentityPermutation
MKLFunc
Measure
NCHW
NHWC
R
TData
TIndex
Transpose
TransposeByHPTT
TransposeImpl
TransposeND
W
Y
accumulate
amount
and
axes
block
blocks
byHPTT
caffe
can
cbegin
cend
cfg
cm
cols
column
const
context
contiguous
copy
create
d
delegate
dims
domatcopy
execute
export
false
hptt
ident
index
inner
macro
major
max
memcpy
mkl
multiplies
nchw
ndim
nhwc
nullptr
once
pivot
plan
product
result
row
rows
rules
size
sizeof
somatcopy
specialized
stride
strides
tensor
threads
transpose
transposeND
ty
u
use
utils
void
we
with
write
y

AxpyImpl
DCHECK
FixedSize
ScaleImpl
alpha
axpy
because
class
const
context
detail
fixed
functions
invoke
limitations
match
n
partial
proxy
scale
size
specialization
y

?
A
B
C
Calculates
Checks
ComputeBroadcastBinaryOpDims
ComputeTransposedStrides
Computest
D
DivUp
EXPORT
Function
Get
GetIndexFromDims
Increase
IncreaseIndexInDims
IntegerIsPowerOf
IntegerLog
Returns
Rounds
TIndex
The
User
Y
age
allows
altB
always
an
and
axes
b
based
batch
be
binary
both
break
broadcast
buff
c
caffe
calculation
careful
cast
casting
ceil
check
cols
colwise
compare
compute
condition
const
converts
copy
count
cube
cur
d
digits
dims
div
divUp
ends
ensure
equal
export
false
fill
from
greater
higher
highest
identity
in
increase
index
input
instead
integer
integers
inv
its
log
lower
macro
max
mid
min
multiple
multiply
must
n
ndim
negate
negative
next
no
not
nxt
one
op
operation
or
overflow
parameter
perm
permutation
pivot
positive
power
pre
r
reduce
round
rows
rowwise
rules
sign
signed
sort
specialized
square
st
static
stride
strides
sum
than
that
there
therefore
transpose
transposed
ty
type
underflow
unsigned
up
use
uses
v
value
void
with
y
zero

AffineChannel
C
ConstEigenArrayMap
ConstEigenVectorArrayMap
EXPORT
EigenArrayMap
HxW
NCHW
NHWC
StorageOrder
Y
affine
arr
bias
c
caffe
channel
colwise
const
context
export
hxW
ident
kOrder
macro
n
ptr
rowwise
rules
scale
specialized
stride
transpose
use
void
y
