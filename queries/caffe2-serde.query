hello! could you please help me write a crate-description for the rust crate "caffe2-serde" containing the following symbols? not all of the symbols are defined in this crate, but they are used somehow (please do not explicitly list the symbols, or write anything other than a simple description.  no description header is necessary. however, please be descriptive without making too many assumptions):

Blob
BlobProto
BlobSerializationOptions
BlobSerializerBase
CopyFromProtoAsIs
CopyFromProtoWithCast
CopyToProtoAsIs
CopyToProtoWithCast
DataType
EnforceCheck
GetMutable
INT
Id
Int
Match
Option
QTensorProto
Resize
SerializationAcceptor
SerializeBlobProtoAsString
String
TensorCPU
TensorCPUDeserializer
TensorCPUSerializer
TensorDeserializer
TensorProto
TypeMeta
TypeMetaToDataType
UINT
Unsupported
acceptor
add
back
base
bias
blob
break
c
case
cast
const
context
d
default
deserialize
deserializer
detail
dim
dims
false
in
meta
name
options
point
pointer
precision
proto
push
qtensor
register
scale
serialize
serializer
set
signed
static
switch
tensor
this
type
typeMeta
uint
void
zero

PyTorchStreamReader
ReadAdapterInterface
besides
buf
c
can
const
extend
file
in
interface
istream
memory
n
pos
read
reader
size
standard
stream
support
this
trait
u
usize
void
we
what
with

Blob
BlobGetMutableTensor
BlobGetTensor
CPU
Cannot
DataType
DeserializeBlob
DeviceType
DtypeBlob
EXPECT
FAIL
FLAGS
INFO
INT
LOG
Make
NOLINTNEXTLINE
Now
Recompute
Resize
STREQ
SerializeBlob
TensorProto
TensorSerialization
Test
TestUnknownDType
The
This
TypeMeta
\
\\x
above
actually
allows
an
and
arrays
avoid
behavior
blob
blobTensor
but
c
caffe
cast
catch
char
check
computed
const
constexpr
cppcoreguidelines
d
define
deserialization
deserialize
deserializing
does
element
ex
exception
failed
false
field
from
future
futureDtypeBlob
generate
has
have
hex
hexStr
just
kBytesPerLine
kCharsPerEncodedByte
kFutureDtypeBlob
kInt
kTestTensorSize
lineIdx
listed
log
logBlob
n
new
normal
not
our
resize
same
santity
serialized
serializing
set
should
size
snprintf
static
str
tensor
tensorData
test
that
try
type
types
u
understand
unknown
unrecognized
unsigned
us
used
version
was
what
with
works

AT
BufReader
Drop
ERROR
IStreamAdapter
R
Read
ReadAdapterInterface
Self
buf
c
cast
char
const
current
drop
end
failed
getting
implemented
istream
n
new
original
pos
position
prev
read
reader
result
seekg
seeking
size
static
tellg
this
u
use
usize
validate
void
what

buf
cfg
const
crc
external
fast
len
mz
mzcrc
ptr
u
use
usize
z

@brief
Backward
BaseContext
Blob
BlobDeserializerBase
BlobGetMutableTensor
BlobProto
Caffe
ContextFromProto
CopyFromProtoWithCast
CopyToCPU
D
DataType
Deserialize
DeserializeTensor
DeserializeToTensor
Deseriralizing
DimsFromTensorProto
EmptyTensorFromProto
FinishDeviceComputation
If
Incorrect
NumelFromTensorProto
OptionToDevice
Precondition
Range
Serialization
Since
SwitchToDevice
TODO
Tensor
TensorDeserializer
TensorOptionsFromProto
TensorProto
Tensors
The
There
This
UINT
UNDEFINED
VLOG
We
after
an
and
are
be
before
begin
big
blob
byte
bytes
call
calling
cases
cast
change
combines
compatibility
complete
const
context
contexts
corresponding
create
deserialize
deserialized
deserializer
deserializing
dest
detail
determined
device
empty
end
endian
every
field
fields
fill
forbidden
from
function
given
has
have
in
information
initialized
into
involve
kIsLittleEndian
lightweight
live
local
models
much
multiple
must
new
not
numElems
or
overhead
part
pass
passed
platform
pointer
proto
protoData
protos
rather
reinterpret
remove
s
segment
serialization
should
size
sizeof
specify
split
storage
supported
tensor
than
that
therefore
this
time
times
too
type
typeSize
uint
under
used
usually
utility
want
we
which
will
with
you

?
@brief
@note
@param
Acceptor
Add
AddNAlreadyReserved
ArrayRef
Assumes
BLOB
BOOL
BUFFER
BYTE
BaseContext
Blob
BlobDeserializerBase
BlobProto
BlobSerializationOptions
BlobSerializerBase
Blobs
Box
CASE
COLLISION
Cannot
Check
Consider
Constants
ContextFromProto
Convenience
Convert
Converts
CopyBytesFromCPU
CopyFromBytesOrInt
CopyFromCPU
CopyFromProtoAsIs
CopyFromProtoWithCast?
CopyFromRepeatedField
CopyToCPU
CopyToProtoAsIs
CopyToProtoWithCast
CopyToProtoWithCast?
CopyToRepeatedField
CreateContext
CreateDeserializer
CreateSerializer
DB
DCHECK
DESERIALIZE
DOUBLE
DataType
DataTypeToTypeMeta
Depending
Deserialization
Deserialize
DeserializeBlob
DeserializeFromBytesOrInt
DeserializeLegacyByteData
DeserializeParams
DeserializeTensorBody
DeserializeTensorData
Deserializes
DeviceTypeName
Did
DimsFromTensorProto
DstType
Else
EnableByteEncoding
EnableByteEncodingFloat
EnforceCheck
ExtendRepeatedField
FLAGS
FLOAT
FMT
FORMAT
FinishDeviceComputation
For
Format
GOOGLE
Get
GetDataType
GetMutable
GetMutableTensorDataRange
GetRaw
GetTensorDataRange
HASH
Half
INT
If
Incorrect
IntegralOrBoolean
Invalid
It
Let
LiteralCopy
Make
Match
MessageLite
No
None
Note
NumelFromTensorProto
Option
OptionToDevice
PROTOBUF
ParseFromString
Pass
REBATCHING
REGISTER
Range
RebatchingBufferDeserialier
Recent
Remove
RepeatedField
Requested
Reserve
Resize
Return
Returns
S
SERIALIZER
STRING
SerializationAcceptor
SerializationFormat
SerializeAsString
SerializeBlob
SerializeBlobProtoAsString
SerializeParams
SerializeTensorData
SerializeToString
SerializeUsingBytesOrInt
SerializeWithOptions
Serializer
Serializes
Simply
Some
SrcType
String
StringDeserializer
StringSerializer
Strings
SwitchToDevice
TODO
TYPE
Tensor
TensorCUDA
TensorDeserializer
TensorOptions
TensorOptionsFromProto
TensorProto
TensorSerializer
The
These
This
To
TypeMeta
UINT
UNDEFINED
VERSION
We
ZERO
ZeroCollisionIdHashDeserializer
about
above
abstract
acceptor
accepts
across
actual
actually
add
all
allocate
allocated
allow
already
also
always
an
and
any
anyway
appear
appended
approaches
are
around
as
assert
attempting
away
b
back
base
be
because
before
begin
beginning
big
blob
blobName
blobs
body
break
bufSize
buffer
bug
build
but
byte
byteData
bytes
c
caffe
call
called
calls
can
cannot
care
case
casing
cast
catch
char
check
checking
checks
chunk
chunkBegin
chunkEnd
chunkSize
chunking
chunks
class
classes
collision
combination
combinations
complicated
configurations
consolidate
const
constants
construct
contain
containing
contains
content
context
continue
convenience
copied
copy
correct
corresponding
create
critical
d
default
defined
defining
description
deserialization
deserialize
deserializer
deserializes
deserializing
dest
detail
detailed
details
device
different
dimensions
dims
do
does
doesn
don
double
dst
during
easily
effectively
either
element
elements
empty
enable
enableByteEncoding
enabled
encoded
encoding
encounter
end
endianness
endif
enforce
enum
error
ever
example
except
exception
exists
export
exposed
expr
extend
failed
fails
false
fatal
field
fill
filling
filter
finish
first
format
found
fp
from
fully
function
functional
functions
given
going
gpuid
guaranteed
h
happen
has
hash
have
having
helper
here
holder
id
ideally
ident
implement
implementation
in
including
incorrect
index
initialize
initialized
input
instead
intentially
interface
into
invalid
irange
itemsize
just
kChunkIdSeparator
kDefaultChunkSize
kIsLittleEndian
kNoChunking
kTensorBlobType
keeping
key
know
known
lambda
languages
large
later
leave
legacy
let
like
likely
literal
location
log
longer
macro
makes
manageable
match
matter
mean
means
mechanism
memory
message
meta
might
more
move
msg
multiple
name
need
never
new
newer
no
not
now
null
nullptr
numElements
number
object
old
older
once
one
only
operations
options
or
otherwise
out
output
own
pairs
parameters
params
parse
partially
passed
passing
paste
perform
performance
place
pointer
pointing
portion
possible
present
problem
process
produce
produces
proto
protobuf
protocol
protos
provide
ptr
purely
purpose
push
range
raw
reach
register
registered
registering
registration
reinterpret
remove
removed
repeated
required
reserve
result
returns
rules
runtime
s
safe
same
save
see
segment
separate
serailizer
serialization
serialize
serialized
serializer
serializes
serializing
set
several
shared
should
since
size
sizeof
small
so
software
some
somehow
source
space
sparse
special
specialized
specific
specified
split
src
start
starting
state
stateful
static
still
storage
storing
str
strings
succeeds
success
such
support
supported
sure
switch
take
takes
temp
tensor
tensors
that
them
then
there
therefore
these
they
thing
this
thread
throw
throws
total
trait
trusted
ty
type
typeMeta
typeSize
types
u
uint
underlying
understand
unexpected
unfortunately
uninitialized
unique
unknown
unless
unnecessary
unrecognized
unsupported
up
use
used
uses
using
usize
value
values
version
versions
very
virtual
void
want
was
we
whether
which
while
will
with
without
write
writes
writing
written
you
your
zero

@brief
A
ANDROID
Android
BOOL
BREAK
BUFFER
BYTE
BaseContext
Blob
BlobProto
BlobSerializationOptions
BlobSerializerBase
Box
C
CASE
COLLISION
CUDAGuard
Chunk
Contact
CreateContext
DOUBLE
DataType
EVERY
EnforceCheck
ExtractDeviceOption
FATAL
FLAGS
FLOAT
GetDevice
HASH
Half
INT
IOBound
If
LOG
MS
Match
NoMoreJobs
Note
Offending
Option
Poorman
Pop
Push
PyTorch
REBATCHING
RebatchingBufferSerialier
Reserve
SERIALIZE
STRING
Serialization
SerializationAcceptor
Serialize
SerializeBlob
SerializeBlobProtoAsString
Serializes
Serializing
SimpleQueue
Since
Starting
StoreDeviceDetail
String
Sync
TODO
TYPE
Tensor
TensorProto
TensorSerializer
Tensors
The
This
ThreadPool
TypeMeta
TypeMetaToDataType
UINT
UNDEFINED
VLOG
WARNING
WILL
When
You
ZERO
ZeroCollisionIdHashSerializer
acceptor
account
add
added
always
and
any
are
async
back
be
because
begin
behavior
blob
buffer
but
c
caffe
calls
case
cast
char
chunk
chunkBegin
chunkQueue
chunkSize
chunkStart
collision
compiler
const
contain
contains
content
context
copy
created
default
deprecated
detail
details
detauls
device
dim
dims
do
does
double
during
emplace
employ
empty
end
endif
error
explicit
false
fatal
filled
function
fut
future
futures
happen
has
hash
have
here
ifndef
in
initialized
input
instead
intentially
into
irange
itemsize
its
kChunkIdSeparator
kDefaultChunkSize
kNoChunking
kTensorBlobType
launch
legacy
makes
max
means
meta
mode
moved
name
needs
never
new
no
non
not
options
otherwise
out
pointer
probably
processChunk
produces
proto
protocol
provide
ptr
raw
re
reserve
s
segment
sense
serialization
serialize
serialized
serializer
serializes
serializing
set
shape
should
size
small
so
specialized
static
still
store
str
supported
switch
sync
takes
task
team
tensor
tensors
that
this
threads
trying
type
typeMeta
types
uint
unexpected
use
user
usize
utility
via
void
warn
we
while
whole
will
with
yet
you
zero

AT
Box
Drop
ERROR
File
FileAdapter
IStreamAdapter
R
Read
ReadAdapterInterface
Self
String
adapter
binary
buf
c
const
drop
failed
file
fs
ifstream
in
istream
make
n
name
new
open
path
pos
read
size
stream
u
unique
use
usize
void
what

?
ASSERT
DataPtr
FALSE
PyTorchStreamReader
PyTorchStreamWriter
PyTorchStreamWriterAndReader
SaveAndLoad
TRUE
b
c
cast
char
close
const
file
foo
getAllWrittenRecords
getRecord
getRecordOffset
hasRecord
iss
istringstream
kFieldAlignment
key
memcmp
n
off
ofstream
oss
ostringstream
output
ptr
read
reader
readers
records
size
static
str
test
through
tie
void
write
writeEndOfFile
writeRecord
writer
writers
written
zip

A
AA
AAA
AAAA
AAAB
AAABB
AAB
AAC
AACBEA
AB
ABAB
ABB
ABC
ABCC
ABCFD
ABD
ABDFC
ABEABD
ABFB
ABFFCF
AC
ACA
ACB
ACBA
ACBAF
ACBC
ACBD
ACC
ACCB
ACD
ACDA
ACE
ACF
ACFD
ACFE
AD
ADA
ADAD
ADB
ADBA
ADC
ADE
ADECF
ADF
ADFA
AE
AEA
AEB
AEC
AECB
AED
AEDB
AEE
AEEE
AEF
AEFA
AF
AFA
AFAD
AFB
AFC
AFCB
AFD
AFDEAD
AFE
AFEA
AFEE
AFFF
Adler
All
B
BA
BAA
BAB
BAC
BADF
BAE
BAEDF
BAFFC
BB
BBA
BBADE
BBB
BBBB
BBBD
BBC
BBD
BBDF
BBE
BBEB
BBF
BBFA
BBFCF
BC
BCA
BCAAF
BCAE
BCB
BCC
BCCD
BCD
BCE
BCEAA
BCEBC
BCED
BCF
BCFC
BCFDE
BCFE
BD
BDA
BDAA
BDAAC
BDB
BDBDF
BDC
BDD
BDDF
BDE
BDEAE
BDEC
BDF
BE
BEA
BEAC
BEB
BEC
BECC
BED
BEDD
BEE
BEEA
BEEB
BEEDC
BEF
BEFB
BF
BFA
BFB
BFBF
BFCB
BFCF
BFD
BFDA
BFF
BFFA
BFFD
BIG
BY
BYTE
Brumme
Bulat
By
BytesAtOnce
C
CA
CAAD
CAAF
CAB
CAC
CAD
CAE
CAEED
CAFD
CB
CBA
CBB
CBBCE
CBC
CBCD
CBD
CBE
CBEC
CBEE
CBF
CBFA
CC
CCA
CCAE
CCAF
CCB
CCBE
CCC
CCE
CCF
CD
CDAAC
CDB
CDBA
CDBB
CDCA
CDCEFB
CDD
CDDB
CDE
CDF
CE
CEA
CEAD
CEB
CEC
CECF
CED
CEDE
CEE
CEEF
CEF
CF
CFA
CFAEFE
CFAFDA
CFB
CFBA
CFBD
CFC
CFCB
CFCF
CFD
CFDAA
CFDEA
CFDEDF
CFEE
CFEEA
CPUs
CRC
Copyright
Core
Crc
CrcBits
D
DA
DAA
DAB
DAC
DAD
DAEAA
DAF
DAFA
DAFD
DB
DBA
DBB
DBC
DBCA
DBCF
DBDC
DBDD
DBE
DBEA
DBF
DBFB
DC
DCAC
DCAEC
DCB
DCBE
DCC
DCD
DCDAD
DCE
DCF
DCFF
DD
DDA
DDAA
DDB
DDC
DDD
DDDE
DDE
DDEEDFF
DDF
DE
DEA
DEB
DEBB
DEC
DED
DEE
DEF
DEFC
DF
DFA
DFAB
DFADB
DFB
DFBA
DFBE
DFC
DFCC
DFCF
DFCFC
DFD
DFDD
DFE
DFEC
E
EA
EAA
EAACCA
EAB
EACE
EAD
EADCF
EAE
EAEC
EAED
EAF
EAFC
EB
EBA
EBB
EBBD
EBC
EBD
EBDF
EBE
EBEA
EBEEFF
EBF
EBFB
EC
ECA
ECBA
ECC
ECCDD
ECCF
ECD
ECDC
ECE
ECEC
ECF
ED
EDA
EDB
EDC
EDCD
EDD
EDE
EDED
EDEF
EDF
EDFC
EE
EEA
EEAB
EEB
EEBD
EEC
EED
EEF
EEFC
EF
EFA
EFAC
EFAE
EFB
EFBD
EFC
EFCD
EFD
EFDD
EFE
EFED
EFF
EFFA
ENDIAN
F
FA
FAA
FAB
FAC
FACB
FACD
FAD
FADE
FADF
FAE
FAF
FB
FBA
FBB
FBBC
FBBE
FBC
FBCC
FBCFB
FBDA
FBDB
FBDBE
FBDE
FBE
FBF
FBFE
FC
FCA
FCB
FCC
FCCBEF
FCD
FCDC
FCDE
FCF
FD
FDA
FDB
FDC
FDD
FDDC
FDDE
FDE
FDEB
FDF
FDFF
FE
FEA
FEB
FEBE
FEC
FED
FEDA
FEE
FEF
FF
FFA
FFAAF
FFACA
FFB
FFCB
FFD
FFDC
FFDD
FFE
FFEC
FFEE
FFF
FFFCD
GNUC
Gold
Hagai
Intel
LOOKUP
Lookup
Mark
MaxSlice
O
ORDER
Option
PREFETCH
Polynomial
SLICING
Slicing
Stephan
TABLE
TODO
Tableless
Unroll
XOR
Ziganshin
above
added
aforementioned
ahead
algorithm
algoritm
all
already
an
and
any
append
appending
apply
are
as
assume
author
automatically
aware
b
based
be
becomes
before
beyond
big
binary
bit
bits
bitwise
blob
block
blocks
branch
branching
break
brumme
bswap
builtin
byte
bytes
bytewise
c
calculation
call
can
case
cfg
change
char
clang
clean
com
combine
combined
come
comments
comms
compilation
compute
concat
consider
const
constants
contributed
convert
corresponds
cpp
crc
crcA
crcB
crca
crcb
create
current
currentChar
dataA
dataB
datasets
declared
define
defined
defines
degenerated
depending
details
differenze
disclaimer
distributes
doesn
don
download
eight
elif
embedded
enabling
endianess
endif
equally
even
every
everything
exists
explained
fast
fastest
first
firstCrc
fitted
flags
following
four
free
from
function
functions
generators
gf
github
global
h
half
halfbyte
has
have
helper
html
http
https
idea
identical
ifdef
in
including
initial
inner
integer
intel
into
isn
iterations
its
j
just
keep
large
least
length
lengthA
lengthB
lengthb
less
let
lines
log
look
lookup
loop
low
lower
made
madler
main
many
master
matrix
me
means
merge
might
modern
most
mostly
much
namespace
need
needing
needs
net
note
notes
number
odd
offsets
once
one
only
operator
optimization
optimize
or
original
others
own
pdf
perfnet
performance
pigz
place
point
polynomial
position
power
prefetch
prefetchAhead
prefetching
prepend
previous
previousCrc
process
projects
property
put
questions
relevant
remaining
remains
remember
remove
reserved
result
reverse
right
rights
row
running
s
same
second
secondLength
see
seems
selects
send
set
setup
shift
shorter
shrinking
sign
signed
since
size
sized
slice
slicing
slower
small
so
some
someting
sourceforge
spot
square
squeezed
stackoverflow
standard
starting
starts
static
stephan
still
stream
such
sum
swap
swapping
sweet
switch
system
table
tableless
tables
technology
temporaries
that
then
there
these
think
this
those
three
times
trailing
trick
u
uint
unchanged
undefining
unfortunately
unroll
unrolling
unrolls
unsigned
unwrap
up
upcoming
use
using
usize
usually
vec
void
we
which
while
will
wise
with
without
written
www
xA
xAA
xAAB
xAAC
xAADA
xAAE
xAAEF
xAAF
xAB
xABA
xABB
xABC
xABCABA
xABD
xAC
xACA
xACADC
xACB
xACBCF
xACC
xACCAA
xAD
xADADDAEC
xADB
xADBC
xADCA
xADCAFE
xADD
xADE
xADEB
xADF
xAE
xAEA
xAEB
xAEBA
xAEC
xAECCB
xAED
xAEDA
xAEDE
xAEEB
xAEF
xAF
xAFA
xAFBC
xAFCDAAB
xAFDFE
xAFF
xB
xBA
xBAA
xBAB
xBABB
xBAC
xBAD
xBADAD
xBAE
xBAF
xBAFD
xBB
xBBBB
xBBD
xBBF
xBC
xBCC
xBCDE
xBCE
xBCF
xBCFB
xBCFC
xBCFD
xBD
xBDB
xBDBDF
xBDCA
xBDCD
xBDD
xBDE
xBDF
xBE
xBEA
xBEAB
xBED
xBEE
xBF
xBFA
xBFC
xBFD
xBFEFCD
xBFF
xC
xCA
xCAB
xCABAC
xCAC
xCAF
xCAFB
xCB
xCBB
xCBBE
xCBD
xCBDBE
xCBDD
xCBF
xCBFAD
xCC
xCCA
xCCAA
xCCB
xCCCBA
xCCD
xCCF
xCD
xCDBA
xCDCE
xCDD
xCDF
xCE
xCEC
xCED
xCEF
xCF
xCFA
xCFBA
xCFBD
xCFC
xCFE
xCFEF
xD
xDA
xDAA
xDAB
xDAC
xDACD
xDAD
xDAE
xDAEF
xDAFC
xDB
xDBA
xDBB
xDBBBAA
xDBBBC
xDBE
xDBF
xDC
xDCA
xDCB
xDCC
xDCD
xDCEB
xDCF
xDD
xDDB
xDDD
xDDDACBA
xDDEE
xDDF
xDE
xDEADEC
xDEBA
xDEBB
xDECECABC
xDED
xDEE
xDEF
xDF
xDFA
xDFB
xDFC
xDFD
xDFDA
xE
xEA
xEAB
xEAC
xEAD
xEAE
xEB
xEBAB
xEBC
xEBD
xEBFF
xEC
xECA
xECE
xECFC
xED
xEDB
xEDBF
xEDCF
xEDF
xEE
xEEC
xEECC
xEEE
xEEFDF
xEF
xEFA
xEFC
xEFCA
xEFD
xEFE
xEFEEA
xEFEF
xEFF
xF
xFA
xFAA
xFAE
xFAEFE
xFB
xFBBDDD
xFBC
xFBD
xFBDF
xFBFC
xFBFF
xFC
xFCA
xFCB
xFCD
xFD
xFDAD
xFDBB
xFDD
xFDDE
xFDE
xFDF
xFE
xFEB
xFED
xFEEC
xFEFDC
xFF
xFFA
xFFE
xFFEC
xFFF
xFFFFFFFF
y
you
your
z
zero
zeros
zlib
~crc
~previousCrc

A
Added
Because
Comment
Dynamic
For
Forward
From
If
Initial
Instead
Introduce
It
Modules
Note
Our
PyTorch
Python
Removed
Stopped
Stops
TODO
That
The
This
Versions
We
When
While
Write
`
`version`
accept
accidentally
across
allow
also
an
analogous
and
archive
archives
are
as
assert
assign
assigned
attempts
backward
be
behavior
better
breaking
bumped
bumped?
but
bytecode
caller
can
certain
change
changed
changes
clients
compatibility
compatible
conditional
const
container
contains
couldn
creates
current
describes
different
div
division
does
don
dynamic
earlier
eq
equal
even
every
example
executables
existing
expected
file
fill
floating
format
forward
from
full
function
given
greater
handle
has
have
higher
historic
how
however
identified
ignores
in
includes
increased
increment
inferring
instead
integer
introduce
its
jit
kMaxSupportedFileFormatVersion
kMinSupportedBytecodeVersion
kMinSupportedFileFormatVersion
kProducedBytecodeVersion
kProducedFileFormatVersion
kind
least
like
likely
limited
loaded
loader
maximum
may
minimize
missing
model
modules
most
must
needed
newer
not
number
numbers
older
op
operator
operators
or
other
override
performing
perspective
pickle
pickling
point
preserve
preserved
preserves
prevents
produced
programs
provide
read
readable
refer
relationship
risk
runtime
s
save
saved
saving
schema
scheme
semantics
serialization
set
should
simple
since
single
so
specify
static
still
support
symbol
symbols
tags
technical
tensor
that
then
these
they
this
those
too
torch
torchscript
tuple
type
types
u
update
updated
use
useful
uses
using
usize
values
version
version`
versioned
versioning
versions
vs
want
was
way
we
which
why
will
with
would
wrapper
write
written
wrong

?
A
ARCHIVE
ASSERT
ASSERTM
AT
All
Arc
As
Attempted
B
BEST
Box
BufReader
BufWriter
CHECK
COMPRESSION
DIR
DataPtr
Drop
ERROR
EXTRA
F
FILE
FILENAME
FLAG
FOUND
File
FileAdapter
GetCPUAllocator
HEADER
IStreamAdapter
If
It
LDH
LEN
LOCAL
MAX
MZ
ModelDef
NO
NOT
OFS
On
One
PYTORCH
Please
PyTorch
PyTorchReader
PyTorchStreamReader
PyTorchStreamWriter
PythonPrint
PytorchStreamReader
PytorchStreamWriter
R
RawMutex
ReadAdapterInterface
Reading
Returns
Rewrites
SIZE
Self
String
THROW
TORCH
The
This
UINT
W
WRITE
We
When
Write
Writer
Writing
Your
Z
ZIP
ZipArchive
\
\\
\n
about
above
access
accumulated
adapter
add
additional
after
again
aligned
all
allocate
already
also
an
and
any
api
append
appended
ar
archive
are
around
as
ascii
attached
attempting
attention
b
back
basename
be
been
beginning
binary
boundaries
boundary
break
buf
build
but
byte
bytes
c
caffe
can
cannot
care
case
cases
cast
central
change
char
check
checking
cleanly
clear
close
closing
common
compress
compressed
consistency
const
constants
constexpr
constraint
contain
containers
contains
convention
created
current
cursor
dataptr
decimal
default
description
detail
developing
directory
do
does
doesn
don
drop
empty
encoding
end
ensure
ensures
entire
entries
entry
err
error
establish
etc
even
ex
exist
export
extra
extract
failed
false
fbxx
figure
file
filename
files
finalize
finalized
find
first
flags
flat
flexible
folder
following
format
found
fread
from
fulfill
full
func
function
getPadding
getRecord
getRecordID
getRecordOffset
getting
guaranteed
guard
handle
has
hasRecord
have
header
in
index
indicies
info
information
init
initializing
input
installation
into
invalid
istream
its
json
jumping
kFieldAlignment
kMagicValueLength
kMaxSupportedFileFormatVersion
kMinSupportedFileFormatVersion
kProducedFileFormatVersion
key
last
layout
le
len
length
likely
lives
local
locate
locating
lock
long
lookups
lot
m
magic
make
mapped
max
maximum
may
means
mem
memcmp
memset
meta
metadata
methods
min
minimum
mmap
mmaping
mod
model
module
modules
move
must
mutex
my
mz
n
name
names
nbytes
need
new
next
not
npos
nullptr
number
offset
ofs
ofstream
old
only
opaque
open
opened
opening
order
ostream
other
our
out
output
overall
pBuf
pIO
pOpaque
pRead
pWrite
padding
parking
parsed
particular
pass
pay
place
plus
pointer
pos
possible
prefixed
preview
previous
properties
proto
provides
ptr
push
put
puts
py
python
random
raw
re
read
reader
reading
reads
reason
record
recordid
records
refer
region
release
require
result
ret
retrieving
returns
retval
s
script
seen
separate
sequential
serialized
set
setup
shape
shapes
should
sied
single
size
sizeof
slash
so
special
specific
ss
stable
start
stat
static
still
storage
store
stored
stoull
str
stream
strncmp
structure
structures
subdirectory
submodule
submodules
substr
such
sufficiently
supported
syntax
take
tensor
tensors
that
these
they
this
though
tie
too
tools
torch
trunc
tuple
type
u
uint
uncomp
uncompressed
unexpected
unique
universally
unsupported
unzip
up
updating
use
used
useful
user
using
usize
usually
v
valid
values
variable
version
void
vs
want
was
we
were
what
which
will
with
won
write
writeEndOfFile
writeRecord
writer
writing
written
zip
