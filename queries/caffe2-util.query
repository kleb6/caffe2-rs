hello! could you please help me write a crate-description for the rust crate "caffe2-util" containing the following symbols? not all of the symbols are defined in this crate, but they are used somehow (please do not explicitly list the symbols, or write anything other than a simple description.  no description header is necessary. however, please be descriptive without making too many assumptions):

?
???
API
Also
Backtrace
Block
COND
Caffe
Cannot
Check
Code
Constructor
Currently
DFL
DIR
Defaults
Dl
Drop
FATAL
FLAGS
Failed
Flag
ForEach
GetIP
Global
GotSIGHUP
GotSIGINT
INITIALIZER
If
InitFatalSignalHandler
Inits
Installs
Intercept
LOG
Linux
MUTEX
NO
NONE
NR
None
ONSTACK
Option
Our
PTHREAD
Previous
PrintBlobSizes
REASON
RESTART
Reason
Restart
Return
SA
SIG
SIGABRT
SIGBUS
SIGFPE
SIGHUP
SIGILL
SIGINFO
SIGINT
SIGSEGV
SIGUSR
STOP
SYS
Self
Set
Setup
SigAction
SignalHandler
SignalHandlerAction
SignalHandlerInfo
Since
Specify
TODO
The
This
Thread
UNKNOWN
URC
Unwind
We
Workspace
abi
aborting
above
action
actually
add
all
an
and
android
any
as
atoi
atomic
back
backtrace
backtracing
be
because
been
before
being
below
blob
branch
break
c
caffe
call
callPreviousSignalHandler
called
calling
can
case
cast
caused
cerr
certain
cfg
change
char
check
communicate
compile
cond
condition
const
context
continue
convert
corruption
count
ctx
current
currentTid
cxa
d
deadlocking
declared
default
define
demangle
demangled
dictating
didn
directly
dirent
dladdr
dli
do
doesn
don
drop
during
endl
entry
enum
enumerating
every
exit
exiting
fall
falls
false
fatal
fatalSignalHandler
fatalSignalHandlersInstallationMutex
fatalSignalHandlersInstalled
fatalSignalName
fatalSignalReceived
fatalSignum
filesystem
finish
flag
flags
fname
found
free
from
function
getBacktrace
getPreviousSigaction
getSignalName
getpid
gettid
gotSIGHUP
gotSIGINT
guard
handle
handleSignal
handler
handlers
handling
has
have
hold
hookedUpCount
hookup
hookupHandler
iff
implementation
in
info
init
initiate
initing
install
installFatalSignalHandlers
installs
instead
intercept
intercepted
into
join
jump
just
kSignalHandlers
know
knows
last
later
lazy
libc
ll
lock
locker
make
makes
mask
may
memory
minimal
mutex
my
name
need
needs
needsLock
new
nice
nix
no
non
not
nullptr
off
offset
open
opendir
or
order
other
our
own
path
pc
pcAddr
pcs
perror
pid
point
possible
previous
previousSighup
previousSigint
previousSigusr
print
printBlobSizes
printStacktrace
printing
prints
proc
procDir
proper
properly
protects
pseudo
pthread
push
raise
raised
re
readdir
received
reference
register
reinterpret
remain
remove
result
s
sa
saddr
see
set
setPrintStackTracesOnFatalSignal
setting
should
sig
sigaction
sigaction?
sigemptyset
sigfillset
sighub
sighup
sighupCount
siginfo
sigint
sigintCount
signal
signaling
signals
signum
since
situation
size
sname
so
stack
stacktrace
stacktraceSignalHandler
stacktraces
state
static
status
still
str
support
supports
sure
switch
sys
syscall
system
take
task
tgkill
that
their
then
there
they
things
this
thread
threads
thus
tid
time
trace
traces
type
u
uint
uintptr
unhook
unhookHandler
uninstall
uninstallFatalSignalHandlers
unlock
unwind
unwinder
up
use
used
user
userInfo
userland
uses
usr
ve
void
wait
want
was
way
we
what
whether
while
why
will
with
works
writing
writingCond
writingMutex
ws
yet
you
your

Load
align
aligned
alignment
assume
builtin
cast
cfg
const
feature
functions
high
horizontal
lane
libc
low
neon
pointer
reinterpret
size
sizeof
store
sum
that
u
uint
uintptr
v
vadd
vaddq
vert
vget
vld
vpadd
vst

CompareDivMod
Div
EXPECT
FixedDivisor
FixedDivisorInt
FixedDivisorTest
HCC
HIP
Mod
PLATFORM
Test
compare
constexpr
device
dist
distribution
div
divide
divisor
endif
fixed
ifndef
kMax
magic
max
mod
native
positive
quot
r
random
rd
rem
shift
small
special
test
uniform
v
value
values

FnOnce
UnwindSafe
assert
catch
do
false
interesting
let
ok
or
panic
result
setup
something
teardown
test
unwind

Assert
OK
Ty
Usage
Var
Y
`
`const
as
assert
assertx
const
export
expr
expression
false
gt
ident
let
list
macro
n
prime
rules
ty
u
usize
while

Invoke
NoOpFunctor
invoke
trait

ASSERT
Child
EOF
EXPECT
Exited
FATAL
FILENO
NO
NOPRINT
PRINT
Replace
SIGABRT
SIGBUS
SIGFPE
SIGILL
SIGINT
SIGNAL
SIGSEGV
STDERR
String
TEST
TRUE
Test
The
This
Thread
WEXITSTATUS
WIFEXITED
WIFSIGNALED
We
actually
an
and
any
away
because
buffer
bufferSize
bytesRead
c
caffe
callback
can
char
child
close
const
cout
crashing
create
d\n
didn
don
due
dummy
dup
enable
end
exit
exited
expected
export
false
fatal
fatalSignalTest
find
finish
fork
forkAndPipe
fprintf
gets
have
ident
keyPhrase
keyPhraseCount
loc
macro
name
no
npos
nullptr
our
parent
perror
pid
pipe
print
printing
process
pt
pthread
raise
read
received
right
rules
setPrintStackTracesOnFatalSignal
should
signal
signal\n
signum
size
so
ssize
stack
statloc
stderr
stderrBuffer
stderrPipe
test
that
then
this
thread
threadCount
tmp
traces
void
wait
want
we
while
with
work
writing
xff


Align
Clone
Debug
Deref
DerefMut
SIMD
SSE
Self
Target
The
align
aligned
always
any
be
before
blocks
bytes
class
deref
derive
export
expr
in
instructions
macro
must
n
ops
order
other
paste
processed
properly
repr
rules
type
variables
which

Array
ArrayBase
ArrayXXf
ArrayXd
ArrayXf
ArrayXi
AsEArrXt
Common
ConstEigenArrayMap
ConstEigenMatrixMap
ConstEigenOuterStridedArrayMap
ConstEigenOuterStridedMatrixMap
ConstEigenStridedArrayMap
ConstEigenStridedMatrixMap
ConstEigenVectorArrayMap
ConstEigenVectorMap
DCHECK
Derived
Dynamic
EArr
EArrXI
EArrXU
EArrXXI
EArrXXU
EArrXXf
EArrXXi
EArrXXt
EArrXb
EArrXd
EArrXf
EArrXi
EArrXt
EMatXU
EMatXd
EMatXf
EMatXt
ERArrXXI
ERArrXXU
ERArrXXf
ERArrXXi
ERArrXXt
ERMatXU
ERMatXd
ERMatXf
ERMatXt
ERVecXd
ERVecXf
EVecXd
EVecXf
EVecXt
Eigen
EigenArrayMap
EigenInnerStride
EigenMatrixMap
EigenOuterStride
EigenOuterStridedArrayMap
EigenOuterStridedMatrixMap
EigenStride
EigenStridedArrayMap
EigenStridedMatrixMap
EigenVectorArrayMap
EigenVectorMap
GetArrayIndices
GetSubArray
GetSubArrayRows
InnerStride
LT
Map
Matrix
MatrixXd
MatrixXf
OuterStride
RowMajor
RowVectorXd
RowVectorXf
Scalar
Stride
U
VectorXd
VectorXf
arr
back
based
c
cast
class
cols
column
const
d
derived
double
elements
evaluated
indices
irange
major
matrix
often
out
push
resize
ret
row
size
static
sub
that
typename
types
uint
use
using
void
we
will

CpuIdTest
EXPECT
GetCpuId
ShouldAlwaysHaveMMX
TRUE
mmx
test

ARM
ConstEigenVectorArrayMap
EigenVectorArrayMap
NEON
Otherwise
Performs
SumMultiple
acc
accT
aligned
be
cfg
const
constexpr
defined
endif
fallback
feature
implementation
into
j
kUnroll
libc
limit
match
multiple
neon
pointwise
size
sizeof
sum
sumInto
toSum
use
v
vaddq
vld
vst
with

Absolute
C
CalcSignedMagic
Calculates
Delight
Div
FixedDivisorI
HCC
HIP
Hacker
INT
Implementation
In
Init
MAX
Must
One
PLATFORM
Self
UINT
Update
Utility
Works
`q
`r
abs
ad
amount
an
anc
and
any
attr
available
be
being
bit
calc
calculate
calculating
cfg
class
comparison
const
cuda
d
d`
default
delta
device
div
divisor
do
endif
from
hcc
here
hip
host
ifdef
ifndef
in
instruction
integer
integers
known
lieu
magic
mod
modulo
mulhi
multiplication
multiplicative
n
nc
new
not
one
perform
platform
positive
quickly
quotients
r
rem
remainders
result
s
section
shift
signed
taken
together
u
uint
unsigned
used
value
while
work

AddArgument
ArgumentHelper
BOOL
BYTE
Cast
CastTest
CreateOperatorDef
DOUBLE
DataType
EXPECT
Ensure
FLOAT
GetCastDataType
GetSingleArgument
HasSingleArgumentOfType
INT
LITE
Manually
PROTO
Parse
STRING
String
THROW
TensorProto
UINT
Unhandled
Unknown
\
arg
argument
begin
case
cast
castOp
define
end
endif
helper
ifndef
implement
in
lite
lowercase
op
proto
s
static
test
tolower
toupper
transform
type
undef

A
AVCodecContext
AVFrame
AVIOContext
AVMediaType
AVPacket
AVPixelFormat
Args
Array
ArrayBase
ArrayXd
ArrayXf
AveragePoolFp
B
Bookkeeper
CPUGeneratorImpl
CPUOp
CUDAStream
CUDNN
CompressedSparseColumn
ConstEigenArrayMap
CuBlasStatus
CuRandGenerator
CuRandStatus
CublasHandle
CudaDeviceProp
CudaEvent
CudaGuard
CudaStream
CudnnActivationDescriptor
CudnnConvolutionBwdDataAlgo
CudnnConvolutionBwdFilterAlgo
CudnnConvolutionDescriptor
CudnnConvolutionFwdAlgo
CudnnDataType
CudnnDropoutDescriptor
CudnnFilterDescriptor
CudnnHandle
CudnnLRNDescriptor
CudnnPoolingDescriptor
CudnnPoolingMode
CudnnRNNDescriptor
CudnnStatus
CudnnTensorDescriptor
CudnnTensorFormat
DATA
DNNLowPOp
Database
DatabaseMode
Default
Dim
EArrXXt
EArrXf
EArrXi
ERArrXXf
EdgeRef
EigenArrayMap
FLOAT
FixedDivisor
FixedType
FunctionSchema
Fuser
GPUContext
HALF
HIPContext
IAlgo
IAttr
IDEEPConvolutionForwardParams
IDEEPScale
IDEEPTensor
IDEEPTensorDescriptor
IDEEPTensorDims
IDType
IFormat
ILowpKind
IProp
IScale
ITensor
ITensorDescriptor
ITensorDims
IValue
IntrusivePtr
LabelType
List
MaxPoolFp
MemoryType
NNGraph
NodeRef
OnnxBackend
OnnxBackendGraphMap
OnnxBackendID
OnnxExporter
OnnxGraph
OnnxModelProto
OnnxSharedPtrBackendGraphInfo
OnnxStatus
OnnxTensorDescriptorV
OnnxTypeProto
OnnxValueInfoProto
OnnxifiLibrary
OperatorHandle
OperatorName
PackBMatrix
PackWeightMatrixForGConv
PackWeightMatrixForGConvB
PackedDepthWiseConvMatrix
PatternMatchType
PerGpuCudnnStates
QnnpOperator
Range
RequantizationParams
ScalingParamType
SerializationFormat
SigAction
SimpleQueue
SkipOutputCopy
SmallVec
Stack
SubgraphType
SwrContext
TensorCoreEngine
Test
TestMatchGraph
TestWithParam
Types
Vector
VectorXd
VectorXf
ZipArchive
are
const
d
derive
enum
phantomA
phantomB
phantomT
these
type
types?
usize
y
z

Named
String
name
trait

Appleby
Austin
BIG
Block
CONSTANT
FALLTHROUGH
Finalization
INTENDED
MurmurHash
Note
ROTL
The
You
ab
ac
ad
ae
afd
algorithms
aligned
all
and
any
are
as
author
avalanche
b
bcaa
be
bits
block
blocks
body
but
c
can
case
ccd
cd
ceb
cf
compile
const
conversion
copyright
d
dce
disclaims
do
domain
ebca
ec
ed
endian
fe
finalization
fmix
force
getblock
h
handle
hash
here
hereby
in
k
key
len
less
mix
murmur
native
nblocks
needs
non
not
only
optimal
optimized
or
out
performance
placed
platform
platforms
produce
public
r
read
reads
respective
results
rotl
same
seed
source
still
swapping
switch
tail
than
their
them
this
u
uint
version
versions
void
was
will
with
written
xa
xab
xc
xcc
xe
xff
your

IN
OUT
cast
in
input
static

GetSigned
Type
dst
export
macro
rules
signed
src
trait
ty
type
u

ARCH
ARM
Allocating
CPUINFO
DynamIQ
INFO
LOG
Make
Max
On
Use
and
arm
available
away
break
buffer
c
cache
case
cast
compiler
const
core
cortex
cpuinfo
d
default
doesn
endif
failed
hash
initialize
loop
m
malloc
max
may
meerkat
not
nullptr
observed
optimize
precise
processor
see
size
sizeof
src
static
sure
switch
u
uArch
uarch
uint
underestimate
wipe

Cannot
DFLT
Default
Drop
EAGAIN
EINTR
Error
FATAL
Failed
IO
LOG
MAX
Recv
SOCKETS
Self
Send
String
THREADS
You
ZMQ
ZmqContext
ZmqMessage
ZmqSocket
addr
an
bind
c
cannot
close
connect
context
create
ctx
default
destroy
disconnect
do
drop
empty
errno
flags
init
io
message
msg
nbytes
new
nullptr
number
ptr
rc
receive
recv
send
set
size
socket
str
success
threads
till
ty
type
unbind
usize
void
while
zmq

AtomicU
B
Bits
C
CPU
CPUID
CpuId
D
E
EAX
ECX
Extended
Feature
Features
GNUC
Identification
Implementation
Info
Intel
It
M
MSC
PIC
Processor
Self
Supports
TODO
The
VER
Values
\
acpi
adx
aes
an
and
apic
asm
avoid
avx
b
be
below
bit
block
bmi
borrowed
branch
but
bw
c
cast
cd
clang
clflushopt
clfsh
clobbering
clwb
cmov
cnxtid
com
consistency
const
content
cpu
cpuid
cpuid\n\t
cpuidex
cpuinfo
cx
d
dca
de
defined
dependency
dq
ds
dscpl
dtes
eax\n\r
ebx
ebx\n\t
ecx
edx
eist
elif
en
endif
er
erms
extended
feature
features
flags
fma
following
folly
fpu
from
fxsr
gcc
good
handle
hle
html
htt
http
id
ident
identification
ifdef
ifma
instead
instruction
intel
invpcid
its
like
macro
mca
mce
might
mmx
monitor
movbe
movl
mpx
msr
mtrr
must
n
name
new
normal
note
osxsave
pae
party
pat
pbe
pcid
pclmuldq
pcommit
pdcm
pf
pge
pic
popcnt
popl
prefetchwt
processor
processors
pse
psn
pushl
r
rdrand
rdseed
reg
register
reserves
restore
rtm
rules
sake
save
sep
sha
singleton
smap
smep
smx
so
specially
ss
sse
ssse
static
that
third
tm
tsc
tscdeadline
tt
uint
us
use
vbmi
vl
vme
vmx
we
www
xsave
xtpr

NEXT
Option
String
UNSAFE
\
back
begin
c
char
compare
const
current
deletion
distance
edit
editDistanceHelper
empty
end
ending
ends
export
false
find
first
full
getline
helper
ident
ignore
insertion
item
j
last
left
len
length
let
macro
max
min
mismatch
move
not
npos
offset
or
pieces
prefix
prev
previous
push
right
rules
s
separator
size
split
ss
starts
str
stringstream
substitution
substr
swap
transposition
trim
u
uint
unwrap
usize
while
with
