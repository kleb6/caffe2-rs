hello! could you please help me write a crate-description for the rust crate "caffe2-context" containing the following symbols? not all of the symbols are defined in this crate, but they are used somehow (please do not explicitly list the symbols, or write anything other than a simple description.  no description header is necessary. however, please be descriptive without making too many assumptions):

A
API
BaseContext
By
C
CHECK
COMPILE
CUB
CUBLAS
CUDA
CUDAContext
CUDAGuard
CUDNN
CURAND
Caffe
CaffeCudaSetDevice
CopyBytes
CuRandGenerator
CublasHandle
CudaMemoryPoolType
CudaStream
CudnnHandle
DEFAULT
DataPtr
Default
Device
DeviceIndex
DeviceOption
DeviceToOption
DeviceType
Drop
DstContext
Encountered
Event
FinishDeviceComputation
For
From
Functions
GPUS
Get
GetAllocator
GetCudaStream
GetCudnnHandle
GetHandle
GetStream
Gets
HOST
HashMap
ID
IDs
In
MAX
MODE
NB
NCCL
NOT
NOTNULL
NoMemoryPool
Note
Only
POINTER
PSEUDO
RNG
RawMutex
Record
Retrieves
Self
SetCurrentStreamId
Should
SrcContext
StreamId
SwitchToDevice
THC
THROW
TIME
TODO
The
This
ThreadLocalCUDAObjects
TypeMeta
Uses
WARNING
Wait
We
You
achieved
after
all
allocate
allocated
allocating
and
are
around
as
async
available
back
be
been
being
bijective
but
bytes
c
caffe
called
calls
can
care
case
cases
cast
caution
cfg
class
computation
const
construct
constructor
context
copy
corresponding
cpu
cublas
cublasCreate
cublasDestroy
cublasSetPointerMode
cublasSetStream
cuda
cudaError
cudaFree
cudaGetErrorString
cudaGetLastError
cudaMalloc
cudaMemcpyAsync
cudaMemcpyDefault
cudaStreamQuery
cudaStreamSynchronize
cudaSuccess
cudastream
cudnn
cudnnCreate
cudnnDestroy
cudnnSetStream
curand
curandCreateGenerator
curandSetPseudoRandomGeneratorSeed
curandSetStream
current
deadlocks
deallocating
default
deprecate
device
directly
do
doesn
drop
dst
during
element
emplace
enabled
endif
ensuring
enum
err
error
ev
event
eventually
exist
exists
explicit
externally
false
finish
flag
free
from
fromCPU
fundamental
generator
getCudaObjects
getCurrentCudaStream
getStreamFromPool
global
going
gpu
guaranteed
guard
handle
handles
has
have
having
high
host
id
ids
ifdef
in
index
initialization
inside
instead
intend
interface
invoked
items
itemsize
its
kernels
launched
let
ll
local
lock
logical
lot
manages
map
mapping
max
may
memory
meta
migrate
msg
multiple
must
mutex
n
nbytes
new
non
not
now
null
nullptr
objects
obtaining
once
operators
option
out
override
own
parking
part
parts
passed
passing
pick
pool
priority
query
r
random
re
record
reference
related
remove
requires
rid
s
same
scheduling
scope
second
seed
set
setCurrentCudaStream
should
size
sizeof
solely
src
static
stats
stream
streams
such
supports
switch
sync
takes
that
these
this
thread
threat
time
toCPU
total
tracking
trying
type
types
u
underlying
unique
up
usages
use
used
usize
void
wait
we
well
while
with
wrap
wrapper
yet

As
Box
But
By
CHECK
COMPILE
CUBLASWrapper
CUDA
CUDAContext
CUDAGuard
CUDNN
Caffe
Creates
CudaEvent
CudaStream
Cudnn
CudnnHandle
CudnnState
CudnnWorkspace
CudnnWrapper
CudnnWrapper?
DataPtr
Device
Drop
Executes
F
GE
GPUS
How
In
Invalid
MAX
NOTNULL
Net
New
NoDelete
Note
Now
PerGPUCudnnStates
PerGpuCudnnStates
Pointer
PyTorch
RawMutex
Returns
STATES
Self
So
Suppose
SyncedCudnnState
TIME
TensorFlow
The
This
Thus
We
What
You
about
according
actually
after
against
all
allow
also
although
an
and
another
any
are
around
as
associated
avoid
batched
be
before
behind
business
call
calling
calls
can
case
class
clear
closure
common
computing
consider
const
context
convolution
could
cuDNN
cublas
cuda
cudaEventCreate
cudaEventDestroy
cudaEventRecord
cudaStreamCreate
cudaStreamDestroy
cudaStreamWaitEvent
cudnn
cudnnCreate
cudnnDestroy
cudnnHandle
cudnnSetStream
current
d
default
delete
deleting
designed
destructors
device
dg
didn
different
directly
do
does
drop
efficient
ensures
ever
every
everyone
example
execute
executes
execution
executions
exists
exit
expensive
external
for?
from
function
functions
future
getting
global
good
gotten
gpu
group
guard
handle
handles
handles?
have
hence
here
holds
hosts
id
identical
idiomatic
idx
in
into
isn
just
kernel
kit
knows
local
lock
lot
make
manually
meant
measurements
mechanism
method
might
mind
more
most
multiple
mutex
natively
nbytes
need
never
new
no
not
now
nullptr
object
one
only
onto
operations
operators
or
outlive
own
owner
parallel
parallelize
parking
pass
per
pointer
pool
practice
prefer
prior
probably
process
program
provide
provided
race
racing
raw
really
reason
reset
result
reuse
s
safe
same
scratch
separate
sequence
serialize
serializes
should
shutdown
since
single
so
some
someone
somewhat
space
specialized
specific
state
states
static
stream
streams
such
supported
sync
synchronizing
than
that
then
theory
there
thing
this
those
thread
threads
through
time
today
type
unifying
use
used
useful
uses
using
usize
usually
variants
very
wait
want
was
way
we
what
which
while
why
wide
will
with
worker
workers
workspace
workspaces
wrapper
wraps
writing
you
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CPUContextTest
CopyToCPU
DeviceOption
EXPECT
FLOAT
NE
New
TestAllocAlignment
TestAllocDealloc
cast
context
dst
freed
gAlignment
nullptr
option
out
ptr
reinterpret
scope
size
sizeof
static
test

?
A
Box
By
CPU
CPUGeneratorImpl
Caffe
CopyBytes
CopyBytesImpl
CopyBytesSameDevice
CopyBytesWrapper
DataPtr
Default
Device
DeviceOption
DeviceToOption
DeviceType
DstContext
Event
From
GetCPUAllocator
In
MT
OK
Operator
Originally
PROTO
RandGenType
RandSeed
RandomNumberSeed
Record
See
SrcContext
TODO
The
TypeMeta
Wait
actual
ad
all
allocate
an
and
any
are
argument
as
associated
async
atomic
bare
basis
be
best
build
bytes
c
caffe
can
cast
cfg
chrono
class
clock
coding
computation
const
context
copied
copy
count
current
default
defined
derive
device
devices
docs
don
dst
duration
effort
epoch
err
especially
ev
event
ever
execute
executor
false
finish
flexible
folly
free
from
fromCPU
fumdamental
function
functions
fundamental
gen
general
generate
generator
getpid
guts
h
hard
has
have
how
id
ignored
implement
implementations
implemented
in
incrementing
instead
items
itemsize
jiayq
kPrime
make
memcpy
mersenne
meta
microseconds
minimum
mobile
modified
modify
more
msg
must
n
nbytes
new
non
not
now
null
numa?
number
op
operator
operators
ops
option
part
parts
passed
rand
random
randomNumberSeed
record
register
representing
reset
same
schedule
scheduling
sec
seed
seedInput
set
should
signal
silently
since
size
sizeof
specific
src
static
stream
streams
supports
switch
sys
system
that
this
time
toCPU
tv
twister
type
types
u
uint
unique
use
usec
used
using
usize
value
void
wait
what
whatever
with
wrapper
xplat

A
But
CHECK
CUBLAS
CUDA
CUDAContext
CUDAContextTest
CUDAGuard
CUDATest
CaffeCudaGetDevice
CaffeCudaSetDevice
Choose
CuRAND
CublasHandle
CudaMemoryPoolType
CudaStream
Device
Different
ERROR
EXPECT
For
GetCudaMemoryPoolType
GetStreamAddress
HasCudaGPU
HasCudaRuntime
INFO
LOG
MEMTYPE
MemoryPoolAllocateDealloc
NE
NONE
NOTNULL
New
NumCudaDevices
PTRATTR
Same
Sleep
SwitchToDevice
TEST
TRUE
TestAllocDealloc
TestDifferntThreadDifferentobject
TestSameThreadDifferntObjectIfDifferentDevices
TestSameThreadSameObject
TestSameThreadTempObject
TestSetGetDeviceWithoutCaffeMode
With
You
above
accessing
actual
address
after
again
allocated
allocating
allocation
and
any
are
attr
b
back
be
because
before
called
chrono
chunk
clear
concurrent
const
context
control
cublas
cublasGetStream
cuda
cudaMemoryTypeDevice
cudaPointerAttributes
cudaPointerGetAttributes
cudaStream
curand
current
destroyed
device
different
do
executions
exit
from
full
function
generator
generators
getStreamForHandle
gpu
guard
handle
have
id
infers
into
join
larger
local
logical
memory
mess
more
nbytes
needs
new
none
noop
not
note
nothing
nullptr
outer
override
pool
prev
previous
proper
ptr
refactored
same
seconds
semantically
set
should
sizeof
sleep
so
something
stream
streams
temp
test
that
this
though
thread
threads
try
type
until
up
use
valid
void
we
while
will
yield

A
ASSERTM
AT
BaseContext
Box
C
CPU
Caffe
ContextRegistry
CopyBytesFromCPU
CopyBytesSameDevice
CopyBytesToCPU
CopyFromCPU
CopySameDevice
CopyToCPU
Create
Device
DeviceType
EnforceMetaCopyOK
Event
Specific
StreamId
SupportsNonFundamentalTypes
SwitchToDevice
TODO
This
TypeMeta
Virtual
add
after
all
an
and
arbitrary
assert
avoid
be
but
bytes
c
cast
class
classes
computation
const
constructor
context
copies
copy
copyOK
create
cross
declare
define
defines
device
did
direct
dispatch
docs
double
dst
enforce
err
ev
event
everyone
false
finalized
finish
fromCPU
functions
fundamental
guts
id
implement
in
interface
items
itemsize
just
make
meta
msg
multiple
n
nbytes
necessities
needs
non
obsoleted
operator
operators
out
proper
pure
record
registry
rely
requires
same
sizeof
so
specific
src
static
stream
supports
switch
there
this
three
toCPU
trait
turns
type
typed
types
u
used
usize
value
virtual
void
wait
we
will
